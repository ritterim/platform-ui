@use "config";
@use "mixins";
@use "variables";
@use "sass:color";
@use "sass:map";
@use "sass:meta";
@use "sass:math";


// Site Menu
//
// Here is a simple menu. This should be used inside your site header. It would work great as a navigation menu.
// The link colors are set to inherit the color defined by the `body`. In this case, `#333`. The links have a subtle
// shadow on mouse over to give the links a nice hover effect.
//
// Our site-menu works great for a site navigation that lives inside your header. It's fully responsive out of the box. Just be sure to use
// the appropriate class names. Your site-menu should be wrapped in a `site-menu-wrapper`. This ensures the proper position is applied to the wrapper
// and allows the responsive menu to function properly. 
// 
// If you have a logo that links to your home page, wrap that in an `a` with the class `site-logo`.
// 
// In order to fire the responsive site-menu you will need an action. Use `site-menu-mobile-action`
// on a `button` or `a`. From there, use any font-icon you'd like to reflect the mobile menu. Feel free to use our icon `pi-menu` which reflects the 
// industry standard "hamburger menu". 
// 
// Next, your `site-menu` should follow the `site-mobile-menu-action`. In other words, they should be siblings. Inside your site-menu add the class
// `site-menu__item` to any link, or anything that you want to be perceived as a link. 
// 
// If you want to have a dropdown menu within the site-menu, you can add `dropdown__trigger` to a `site-menu__item`, or add an element with the class of
// `dropdown__content` as a sibling to your `dropdown__trigger`. Finally, wrap these elements in a `dropdown` class. When you click on the `dropdown__trigger`
// your dropdown__content will appear. You can put anything inside the dropdown__content. If you have a list of links and you want them to look like the rest
// of the links inside your site-menu, add the class `dropdown__content-item`. 
// 
// We built the site-menu to be light, and work well for your needs. It does not come with a background color set. However, the site-menu will inherit 
// its parent background-colors. You can read more about this below in the documentation.
// 
// | <i class="pi-warning text-orange"></i> NOTE: The responsive menu and the dropdown menus require the use of JavaScript |
// | --
// 
// Markup:
// <header class="site-menu-wrapper">
//     <a href="/" class="site-logo">
//         <img src="https://via.placeholder.com/150x50.png?text=Site+Logo" alt="Site Logo" />
//     </a>
//     <button class="site-menu-mobile-action">
//       <span class="sr-only">Toggle Navigation</span>
//       <i aria-hidden="true" focusable="false" class="pi-menu pi-xl"></i>
//     </button>
//     <nav class="site-menu">
//       <a href="#" class="site-menu__item">Item 1</a>
//       <a href="#" class="site-menu__item">Item 2</a>
//       <a href="#" class="site-menu__item">Item 3</a>
//       <a href="#" class="site-menu__item">Item 4</a>
//       <div class="dropdown">
//         <a href="#" class="site-menu__item dropdown__trigger">
//           Item 1 <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//         </a>
//         <div class="dropdown__content">
//           <a href="#" class="dropdown__content-item">Link 1</a>
//           <a href="#" class="dropdown__content-item">Link 2</a>
//           <a href="#" class="dropdown__content-item">Link 3</a>
//           <a href="#" class="dropdown__content-item">Link 4</a>
//         </div>
//       </div>
//     </nav>
// </header>
//
// Weight: -1
//
// Styleguide Menus.SiteMenu


// Site Menu - Background Color
// 
// You can add a background color to your `site-menu`. This will accomplish two things. First, the background color of your
// menu will change. Second, the hover effect on the links in the menu will reflect a darker version of the background color 
// you set. The color of the links will also change based on the color of the site-menu. If the color is dark, the link color 
// will be white. If the background color is a lighter color, the link color will be `var(--dark)`. Which is currently set to
// the body color.
// 
// <div class="message message--warning" data-header="">
//   <p>If you want your site-menu to have a background-color without the inherit hover effects, just wrap the <code>site-menu</code> in an element with a <code>background-{color}</code> class. The site-menu and dropdowns will inherit background colors from their parents.</p>
// </div>
// 
// Markup:
// <nav class="site-menu background-navy">
//   <a href="#" class="site-menu__item">Item 1</a>
//   <a href="#" class="site-menu__item">Item 2</a>
//   <a href="#" class="site-menu__item">Item 3</a>
//   <a href="#" class="site-menu__item">Item 4</a>
//   <a href="#" class="site-menu__item">Item 5</a>
// </nav>
// <nav class="mt-4 site-menu background-lighter">
//   <a href="#" class="site-menu__item">Item 1</a>
//   <a href="#" class="site-menu__item">Item 2</a>
//   <a href="#" class="site-menu__item">Item 3</a>
//   <a href="#" class="site-menu__item">Item 4</a>
//   <a href="#" class="site-menu__item">Item 5</a>
// </nav>
// 
// Weight: 1
// 
// Styleguide Menus.SiteMenu.Background


// Site Menu - Bordered
// 
// Adding the modifier class of `site-menu--bordered` will add borders separating each menu item.
// 
// Markup:
//   <nav class="site-menu site-menu--bordered">
//     <a href="#" class="site-menu__item">Item 1</a>
//     <a href="#" class="site-menu__item">Item 2</a>
//     <a href="#" class="site-menu__item">Item 3</a>
//     <a href="#" class="site-menu__item">Item 4</a>
//     <a href="#" class="site-menu__item">Item 5</a>
//   </nav>
// 
// 
// Weight: 3
// 
// Styleguide Menus.SiteMenu.Bordered


// Site Menu - Hover Underline
// 
// Adding the class `hover-underline` to your `site-menu` will give the `<button>`s in the menu a bottom border on hover.
// 
// <div class="message message--warning" data-header="">
//   <p>You can change the color of your border hovers by adding the modifier of <code>hover-underline--{color}</code>.</p>
// </div>
// 
// Markup:
//   <nav class="site-menu hover-underline">
//     <a href="#" class="site-menu__item">Item 1</a>
//     <a href="#" class="site-menu__item">Item 2</a>
//     <a href="#" class="site-menu__item">Item 3</a>
//     <a href="#" class="site-menu__item">Item 4</a>
//     <a href="#" class="site-menu__item">Item 5</a>
//   </nav>
//   <div class="my-3"></div>
//   <nav class="site-menu hover-underline hover-underline--med-blue">
//     <a href="#" class="site-menu__item">Item 1</a>
//     <a href="#" class="site-menu__item">Item 2</a>
//     <a href="#" class="site-menu__item">Item 3</a>
//     <a href="#" class="site-menu__item">Item 4</a>
//     <a href="#" class="site-menu__item">Item 5</a>
//   </nav>
// 
// 
// Weight: 4
// 
// Styleguide Menus.SiteMenu.HoverUnderline


// Site Menu - Dropdown
// 
// | <i class="pi-warning text-orange"></i> NOTE: This component requires the use of JavaScript |
// | --
// 
// You can add a dropdown submenu to your site-menu. The markup for this component is pretty specific. Be sure to include the following classes.
// You will need a `dropdown` class wrapping two sibling elements, a `dropdown__trigger` and your `dropdown__content`. View the example below to 
// see how this structure works. 
// 
// By default, the dropdowns will open positioned to the left of their parent, all except for the last dropdown in the menu. 
// This will help prevent any dropdowns from opening off the page. 
// 
// The dropdowns inherit the hover states of the site-menu.
// 
// Also note that the `dropdown__trigger` can be on a `button` as well as an `a`. If you use a button, be sure to add the class
// `button--plain` to disable the default Platform UI button styles.
// 
// Like we mentioned above, by default, the dropdowns will open positioned to the left of their parent.
//  
// <div class="message message--warning" data-header="">
//   <p>By default, the dropdowns will open positioned to the left of their parent but you can change the alignment.</p>
//   <p>Dropdowns can be changed to open centered, or open from the right. This can be changed by adding the modifier class
//      of <code>dropdown--centered</code> or <code>dropdown--right</code> to the <code>dropdown</code> class.
//   </p>
// </div>
// 
//
// Markup:
// <div class="background-white">
//   <nav class="site-menu">
//     <div class="dropdown">
//       <div class="site-menu__item dropdown__trigger">
//         Item 1
//         <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//       </div>
//       <div class="dropdown__content">
//         <a href="#" class="dropdown__content-item">Item 1</a>
//         <a href="#" class="dropdown__content-item">Item 2</a>
//         <a href="#" class="dropdown__content-item">Item 3</a>
//         <a href="#" class="dropdown__content-item">Item 4</a>
//         <a href="#" class="dropdown__content-item">Item 5</a>
//       </div>
//     </div>
//     <div class="dropdown">
//       <div class="site-menu__item dropdown__trigger">
//         Item 2
//         <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//       </div>
//       <div class="dropdown__content">
//         <a href="#" class="dropdown__content-item">Item 1</a>
//         <a href="#" class="dropdown__content-item">Item 2</a>
//         <a href="#" class="dropdown__content-item">Item 3</a>
//         <a href="#" class="dropdown__content-item">Item 4</a>
//         <a href="#" class="dropdown__content-item">Item 5</a>
//       </div>
//     </div>
//     <div class="dropdown">
//       <div class="site-menu__item dropdown__trigger">
//         Item 3
//         <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//       </div>
//       <div class="dropdown__content">
//         <a href="#" class="dropdown__content-item">Item 1</a>
//         <a href="#" class="dropdown__content-item">Item 2</a>
//         <a href="#" class="dropdown__content-item">Item 3</a>
//         <a href="#" class="dropdown__content-item">Item 4</a>
//         <a href="#" class="dropdown__content-item">Item 5</a>
//       </div>
//     </div>
//     <div class="dropdown">
//       <div class="site-menu__item dropdown__trigger">
//         Item 4
//         <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//       </div>
//       <div class="dropdown__content">
//         <a href="#" class="dropdown__content-item">Item 1</a>
//         <a href="#" class="dropdown__content-item">Item 2</a>
//         <a href="#" class="dropdown__content-item">Item 3</a>
//         <a href="#" class="dropdown__content-item">Item 4</a>
//         <a href="#" class="dropdown__content-item">Item 5</a>
//       </div>
//     </div>
//     <div class="dropdown">
//       <div class="site-menu__item dropdown__trigger">
//         Item 5
//         <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//       </div>
//       <div class="dropdown__content">
//         <a href="#" class="dropdown__content-item">Item 1</a>
//         <a href="#" class="dropdown__content-item">Item 2</a>
//         <a href="#" class="dropdown__content-item">Item 3</a>
//         <a href="#" class="dropdown__content-item">Item 4</a>
//         <a href="#" class="dropdown__content-item">Item 5</a>
//       </div>
//     </div>
//   </nav>
// </div>
// <p class="mt-4">The dropdowns with a background utility applied. <i class="pi-arrow-down"></i></p>
// <nav class="site-menu background-navy">
//   <div class="dropdown">
//     <div class="site-menu__item dropdown__trigger">
//       Item 1
//       <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//     </div>
//     <div class="dropdown__content">
//       <a href="#" class="dropdown__content-item">Item 1</a>
//       <a href="#" class="dropdown__content-item">Item 2</a>
//       <a href="#" class="dropdown__content-item">Item 3</a>
//       <a href="#" class="dropdown__content-item">Item 4</a>
//       <a href="#" class="dropdown__content-item">Item 5</a>
//     </div>
//   </div>
//   <div class="dropdown">
//     <div class="site-menu__item dropdown__trigger">
//       Item 2
//       <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//     </div>
//     <div class="dropdown__content">
//       <a href="#" class="dropdown__content-item">Item 1</a>
//       <a href="#" class="dropdown__content-item">Item 2</a>
//       <a href="#" class="dropdown__content-item">Item 3</a>
//       <a href="#" class="dropdown__content-item">Item 4</a>
//       <a href="#" class="dropdown__content-item">Item 5</a>
//     </div>
//   </div>
//   <div class="dropdown">
//     <div class="site-menu__item dropdown__trigger">
//       Item 3
//       <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//     </div>
//     <div class="dropdown__content">
//       <a href="#" class="dropdown__content-item">Item 1</a>
//       <a href="#" class="dropdown__content-item">Item 2</a>
//       <a href="#" class="dropdown__content-item">Item 3</a>
//       <a href="#" class="dropdown__content-item">Item 4</a>
//       <a href="#" class="dropdown__content-item">Item 5</a>
//     </div>
//   </div>
//   <div class="dropdown">
//     <div class="site-menu__item dropdown__trigger">
//       Item 4
//       <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//     </div>
//     <div class="dropdown__content">
//       <a href="#" class="dropdown__content-item">Item 1</a>
//       <a href="#" class="dropdown__content-item">Item 2</a>
//       <a href="#" class="dropdown__content-item">Item 3</a>
//       <a href="#" class="dropdown__content-item">Item 4</a>
//       <a href="#" class="dropdown__content-item">Item 5</a>
//     </div>
//   </div>
//   <div class="dropdown">
//     <div class="site-menu__item dropdown__trigger">
//       Item 5
//       <i class="ml-1 pi-angle-down" aria-hidden="true"></i>
//     </div>
//     <div class="dropdown__content">
//       <a href="#" class="dropdown__content-item">Item 1</a>
//       <a href="#" class="dropdown__content-item">Item 2</a>
//       <a href="#" class="dropdown__content-item">Item 3</a>
//       <a href="#" class="dropdown__content-item">Item 4</a>
//       <a href="#" class="dropdown__content-item">Item 5</a>
//     </div>
//   </div>
// </nav>
// 
// Weight: 5
// 
// Styleguide Menus.SiteMenu.Dropdown


// Fixed Header
//
// To get a fixed header you can set the desired height in the config file. The `site-header` needs the modifier, `site-header--fixed`. This is what gives the header the `position: fixed` style.
// In order to ensure that you have proper space between your header and main content, add the class `header-fixed` to the direct sibling of your `site-header`.
// We use this in this styleguide.
// 
// Your code could look something like this:
// 
// ```html
// <header class="site-header site-header--fixed">
//   Header Content Here
// </header>
// <main class="header-fixed">
//   Main content here
// </main>
// ```
// 
// <div class="my-3"></div>
//
// Styleguide Menus.Fixed

.site-header {

  &.site-header--fixed {
    position: fixed;
    width: 100%;
    top: 0;
    height: config.$menu-height;
    z-index: 100;

    + .header-fixed {
      margin-top: config.$menu-height;
    }
  }
}



// **********************
// Site Menu
// **********************

.site-menu-wrapper {
  display: flex;
  justify-content: space-between;
  position: relative;

  // Link wrapping a site logo
  .site-logo {
    display: inline-flex;
    height: 100%;

    img {
      height: 100%;
    }
  }
}

$all-colors: () !default;

@if meta.type-of(config.$config-colors) == 'map' {
  $all-colors: map.merge(config.$config-colors, variables.$greyscale);
} @else {
  $all-colors: map.merge(variables.$greyscale, $all-colors);
  @warn "$config-colors is not set or empty";
}

.site-menu {
  --menu-text-color: inherit;

  align-items: center;
  background-color: inherit;
  display: flex;
  list-style: none;
  padding: 0;

  li {
    margin: 0;
  }


  // default site-menu link hovers
  .site-menu__item,
  .dropdown__content-item {
    align-items: center;
    color: var(--menu-text-color);
    display: flex;
    line-height: 1;
    transition: config.$transitions;
    padding: map.get(variables.$spacers, 2) map.get(variables.$spacers, 3);
  }

  &:not([class*=background-]) {

    .site-menu__item,
    .dropdown__content-item {
      @media (pointer: fine) {
        &:hover {
          &:not(.active) {
            text-shadow: 1px 0 0 currentColor;
          }
        }
      }
    
      &.active {
        text-shadow: 1px 0 0 currentColor;
      }
    }
  }


  // site-menu underline on hover
  &.hover-underline {

    .site-menu__item,
    .dropdown__content-item {
      position: relative;

      &:after {
        background-color: map.get(variables.$greyscale, 'dark');
        bottom: 0;
        content: '';
        height: 2px;
        left: 1rem;
        opacity: 0;
        position: absolute;
        right: 1rem;
        transition: config.$transitions;
      }

      
      @each $unit, $rem in variables.$spacers {
        &.p-#{$unit} {
          &:after {
            left: $rem;
            right: $rem;
          }
        }

        &.px-#{$unit} {
          &:after {
            left: $rem;
            right: $rem;
          }
        }

        @each $direction, $d in variables.$xy-border {
          &.p#{$d}-#{$unit} {
            &:after {
              #{$direction}: #{$rem};
            }
          }
        }
      }
  
      @media (pointer: fine) {
        &:hover {
          &:not(.active) {

            &:after {
              opacity: 1;
            }
          }
        }
      }
    
      &.active {

        &:after {
          opacity: 1;
        }
      }
    }


    .dropdown-active {

      > .dropdown__trigger {
        
        &:after {
          opacity: 1;
        }
      }
    }

    // Border hover colors
    @each $name, $color in $all-colors {
      &.hover-underline--#{$name} {

        .site-menu__item,
        .dropdown__content-item {

          &:after {
            background-color: $color;
          }
        }
      }
    }
  }


  // Side border modifier
  &.site-menu--bordered {
    --menu-border-color: var(--base, #666666);

    @media (min-width: (config.$show-mobile-menu)) {
      > .site-menu__item,
      > li > .site-menu__item,
      > .dropdown > .site-menu__item {
        border-left: 1px solid var(--menu-border-color);
      }
  
      > li:first-child .site-menu__item,
      > .site-menu__item:first-child,
      > .dropdown:first-child > .site-menu__item {
        border-left: none;
      }

      .dropdown__content {

        > li > .dropdown__content-item,
        > .dropdown__content-item {
          border-top: 1px solid var(--menu-border-color);
        }

        > li:first-child .dropdown__content-item, 
        > .dropdown__content-item:first-child {
          border-top: none;
        }
      }
    }
  }


  .dropdown__content {
    display: flex;
    flex-direction: column;
    left: 0;
  }

  .dropdown {
    
    // changes position of dropdowns when open
    &.dropdown--right {

      .dropdown__content {
        left: auto;
        right: 0;
      }
    }

    &.dropdown--center {

      .dropdown__content {
        left: 50%;
        transform: translateX(-50%);
      }
    }
  }


  // Color specific 
  @each $name, $color in $all-colors {
    &.background-#{$name} {
      --item-hover-color: #{color.adjust($color, $lightness: math.percentage(-.05))};

      background-color: $color !important;

      .site-menu__item,
      .dropdown__content-item {
        @if lightness($color) > 50 {
          --menu-text-color: var(--dark, #{map.get(variables.$greyscale, 'dark')});
        } @else {
          --menu-text-color: var(--white, #{map.get(variables.$greyscale, 'white')});
        }
  
        &.active {
          background-color: color.adjust($color, $lightness: math.percentage(-.1));
        }
  
        @media (pointer: fine) {
          &:hover {
            &:not(.active) {
              background-color: var(--item-hover-color, #{color.adjust($color, $lightness: math.percentage(-.05))});
            }
          }
        }
      }

      .dropdown-active {

        > .dropdown__trigger {
          background-color: var(--item-hover-color, #{color.adjust($color, $lightness: math.percentage(-.05))});
          text-shadow: none;
        }
      }

      .dropdown__content {
        background-color: $color;
      }


      // Site menu border modifier
      &.site-menu--bordered {
        @if lightness($color) > 50 {
          --menu-border-color: var(--dark, #{map.get(variables.$greyscale, 'dark')});
        } @else {
          --menu-border-color: var(--white, #{map.get(variables.$greyscale, 'white')});
        }
      }
    }
  }
}


// Dropdown
.dropdown {
  background-color: inherit;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;

  ul,
  ol {
    list-style: none;
    padding: 0;
  }

  &.dropdown-active {

    > .dropdown__trigger {
      text-shadow: 1px 0 0 currentColor;
      
      + .dropdown__content {
        max-height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
        z-index: 6;

        .site-header--fixed & {
          max-height: calc(100vh - #{config.$menu-height});
        }
      }
    }
  }

  .dropdown__trigger {
    align-items: center;
    display: flex;
  }
  
  .dropdown__content {
    background-color: inherit;
    height: auto;
    left: 0;
    max-height: 0;
    min-width: 12rem;
    width: 100%;
    overflow: hidden;
    position: absolute;
    transition: all .2s ease-in-out;
    top: 100%;
    z-index: 5;
  }
}


// *****************
// Mobile site menu
// *****************

.site-menu-wrapper {
  @media (max-width: (config.$show-mobile-menu - 1)) {
    background-color: inherit;
    position: relative;
  }

  .site-menu-mobile-action {
    appearance: none;
    background: transparent;
    border: none;
    color: inherit;

    @media (min-width: (config.$show-mobile-menu)) {
      display: none;
    }

    > * {
      pointer-events: none;
    }
  }

  @media (max-width: (config.$show-mobile-menu - 1)) {

    .site-menu {
      align-items: baseline;
      flex-direction: column;
      left: 0;
      max-height: 0;
      position: absolute;
      right: 0;
      top: 100%;
      transition: all config.$transitions ease-in-out;
      overflow: hidden;
      visibility: hidden;
      z-index: 2;
  
      &.active {
        max-height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
        visibility: visible;
      }


      // Side border modifier
      &.site-menu--bordered {

        > .site-menu__item,
        > li > .site-menu__item,
        > .dropdown > .site-menu__item {
          border-top: 1px solid var(--menu-border-color);
        }
    
        > li:first-child .site-menu__item,
        > .site-menu__item:first-child,
        > .dropdown:first-child > .site-menu__item {
          border-top: none;
        }

        .dropdown__content {

          > li > .dropdown__content-item,
          > .dropdown__content-item {
            border-top: 1px solid var(--menu-border-color);
          }

          > li:first-child .dropdown__content-item, 
          > .dropdown__content-item:first-child {
            border-top: none;
          }
        }

        &:not([class*=background-]) {

          &.active {
            border-bottom: 1px solid;
          }
        }
      }

      .dropdown {
        width: 100%;

        .dropdown__content {
          border: none;
          position: static;
        }
      }

      // Accounts for fixed header height and max-height of open nav
      &.site-header--fixed,
      .site-header--fixed & {

        .site-menu {

          &.active {
            max-height: calc(100vh - var(--menu-height, 4.5rem));
            overflow-y: auto;
            overflow-x: hidden;
          }
        }
      }
    }

    .site-menu__item,
    .dropdown__content-item {
      width: 100%;
    }
  }
}

// Fixed header with mobile site-menu
.site-header--fixed {

  &.site-menu-wrapper,
  .site-menu-wrapper {

    .site-menu.active {
      max-height: calc(100vh - #{config.$menu-height});
    }  
  }
}




// Icon Menu
//
// When you need a horizontal list of icons, look no further than "Icon Menu". Use the mark up below
// to get the list you want. Be sure to use the specific `icon-menu` classes. With this strcuture you have
// the freedom to use any icon you want and make that icon change to whatever color you want on hover.
// Simpy change the `<icon>` class to the desired font-awesome icon you want. Then, add the `text-{color}--hover`
// class to the `icon-menu__action`. To see a list of available hover colors [click here](/section-typography.html#kssref-typography-utilities-color).
//
// In the example below, we're using `<div>`s on the `icon-menu__action` to build the menus. You could use a `<a>` or an `<a>` to improve accessibility
// depending on exactly what you need. If you use a less semantic element like `<div>`, we would recommend adding `role="button"`.
//
// Also notice that the `pointer` class was added to those elements that do not have a `cursor: pointer` applied to them by default.
// 
// Adding `icon-menu icon-menu--vertical` creates a vertical icon menu.
//
// | <i class="fpi-warning text-orange"></i> Be sure to always wrap the font icon in another element. We don't want to have the click event be on the `<icon>` itself.|
// | ---
//
//
// You can add as many icons as you'd like.
//
//
// Markup:
// <div class="icon-menu">
//   <div class="icon-menu__item">
//     <a href="#" class="icon-menu__action text-negative--hover">
//       <i class="pi-trash" aria-hidden="hidden"></i>
//     </a>
//   </div>
//   <div class="icon-menu__item">
//     <a href="#" class="icon-menu__action text-positive--hover">
//       <i class="pi-edit" aria-hidden="hidden"></i>
//     </a>
//   </div>
//   <div class="icon-menu__item">
//     <a href="#" class="icon-menu__action text-red--hover">
//       <i class="pi-clock" aria-hidden="hidden"></i>
//     </a>
//   </div>
// </div>
// <div class="icon-menu icon-menu--vertical">
//   <div class="icon-menu__item">
//     <a href="#" class="icon-menu__action text-negative--hover">
//       <i class="pi-trash" aria-hidden="hidden"></i>
//     </a>
//   </div>
//   <div class="icon-menu__item">
//     <a href="#" class="icon-menu__action text-positive--hover">
//       <i class="pi-edit" aria-hidden="hidden"></i>
//     </a>
//   </div>
// </div>
//
// Styleguide Menus.IconMenu

// icon menu
.icon-menu {
  align-items: center;
  display: flex;

  &__item {
    border-right: 1px solid map.get(variables.$greyscale, 'light' );

    &:first-of-type {
      padding-left: 0;
    }

    &:last-of-type {
      border-right: none;
      padding-right: 0;
    }
  }

  &__action {
    color: color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold));
    @include mixins.square(variables.$spacer * 1.5);
    @extend %flex-center;

    &:hover {
      color: map.get(variables.$error-colors, 'default' );
      transform: scale(1.1);
    }
  }

  &--vertical {
    flex-direction: column;
    justify-content: center;

    .icon-menu__item {
      border: 0;
      border-bottom: 1px solid map.get(variables.$greyscale, 'light' );
      padding: map.get(variables.$spacers, 1) 0;
      &:last-of-type {
        border-bottom: none;
      }
    }
  }
}
