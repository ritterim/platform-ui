@use "config";
@use "variables";
@use "sass:map";
@use "sass:meta";

// Background Colors
//
// The map below can be used to set, or change a background-color on a specific element with one, or both of the classes `background-{color}` and `background-{color}--hover`.
// You can view our list of colors [greyscale](/section-color.html#kssref-color-greyscale), [brand colors](/section-color.html#kssref-color-brandcolors), and [secondary colors](/section-color.html#kssref-color-secondarycolors) maps. Alpha transparency can also be set for any background color available. Alpha values range from 10% - 90% on the tens, for example `background-black-a90` sets the background of the element to black with 90% alpha.
//
// | Greyscale               |                          |                           |                            |
// | ----------------------- | ------------------------ | ------------------------- | -------------------------- |
// | `background-white`      | `background-lighter`     | `background-light-mid`    | `background-light`         |
// | `background-base`       | `background-dark`        | `background-black`        |                            |
//
// | Brand colors            |                          |                           |                            |
// | ----------------------- | ------------------------ | ------------------------- | -------------------------- |
// | `background-navy`       | `background-skyblue`     | `background-med-blue`     | `background-beige`         |
// | `background-peach`      | `background-salmon`      | `background-brown`        | `background-orange`        |
//
// | Remove a background color |                          |                           |                            |
// | ------------------------- | ------------------------ | ------------------------- | -------------------------- |
// | `background-transparent`  |                          |                           |                            |
// 
// Styleguide Utilities.Color.Background

$all-colors: () !default;
$site-colors: () !default;

@if meta.type-of(config.$config-colors) == 'map' {
  $all-colors: map.merge(config.$config-colors, variables.$greyscale);
} @else {
  $all-colors: map.merge(variables.$greyscale, $all-colors);
  @warn "$config-colors is not set or empty";
}

@if meta.type-of($all-colors) == 'map' {
  @each $name, $color in $all-colors {
    // text color
    .text-#{$name} {
      &.pill {
        border-color: $color !important;
      }
      color: $color !important;

      &--hover {
        transition: background-color config.$transitions, color config.$transitions;

        &.text-underline--hover {
          &:after {
            background-color: $color !important;
          }
        }

        &:hover {
          color: $color !important;
        }
      }
    }
    // background color
    .background-#{$name} {
      background-color: $color !important;

      &--hover {
        transition: background-color config.$transitions;

        &:hover {
          background-color: $color !important;
        }
      }

      &.button {

        &.loading {

          &:before {
            background-color: $color !important;
          }
        }
      }
    }

    // Add alpha transparency  
    @for $i from 1 through 9 {
      .background-#{$name}-a#{$i}0 {
        background-color: rgba($color, $i * .1) !important;
      }
    }
  }
}

// error Colors
@if meta.type-of(variables.$error-colors) == 'map' {
  @each $name, $color in variables.$error-colors {
    // text color
    .text-#{$name} {
      border-color: $color !important;
      color: $color !important;
    }
    // background color
    .background-#{$name} {
      background-color: $color !important;
    }
    // Add alpha transparency  
    @for $i from 1 through 9 {
      .background-#{$name}-a#{$i}0 {
        background-color: rgba($color, $i * .1) !important;
      }
    }
  }
}

// transparent color
.background-transparent {
  background-color: transparent!important;
}
