@use "variables";
@use "colors";

// Borders
//
// You can add specific borders to elements by using the following classes:
//
// Markup:
// <div class="block-container mobile-up-2 blocks px-2 mb-3">
//   <div class="block">
//     <div class="card border--color-red">
//       <h4 class="border-b border--color-navy pb-2 mb-2">Card Header</h4>
//       <div class="card__content">
//         <p>Here is some generic content for testing purposes. Don't worry about the actualy content of this card. The idea is to show how cool we can get with making borders.</p>
//       </div>
//     </div>
//   </div>
//   <div class="block">
//     <div class="card">
//       <h4 class="pb-2 mb-2">Card Header</h4>
//       <div class="card__content block-container blocks px-3">
//         <div class="block block-6 border-r border--color-med-blue">
//           <p>Here is some generic content for testing purposes. Don't worry about the actualy content of this card.</p>
//         </div>
//         <div class="block block-6">
//           <p>The idea is to show how cool we can get with making borders.</p>
//         </div>
//       </div>
//     </div>
//   </div>
//   <div class="block">
//     <div class="card">
//       <h4 class="border-y border--color-lighter py-2 mb-2">Card Header</h4>
//       <div class="card__content">
//         <p>Here is some generic content for testing purposes. Don't worry about the actualy content of this card. The idea is to show how cool we can get with making borders.</p>
//       </div>
//     </div>
//   </div>
// </div>
//
// | Classes        |                         |                 |                 |
// | -------------- | ----------------------- | --------------- | --------------- |
// | `no-border`    | `border--color-{color}` |                 |                 |
// | `border`       | `border-x`              | `border-y`      |                 |
// | `border-t`     | `border-r`              | `border-b`      | `border-l`      |
// | `border--width-{1}`|                     |                 |                 |
//
//
// Styleguide Utilities.Borders

// Border Colors
// 
// The `border--color-{color}` class combines the [brand colors](/section-color.html#kssref-color-brandcolors), and [secondary colors](/section-color.html#kssref-color-secondarycolors) maps.
// 
// You can also apply a border to a specific direction (`border-{direction}-color--{color}`). For example: `border-r--color-navy` would apply `border-right-color: navy`.
// 
// A border color can be removed from an element or direction by using, `border--color-transparent` or `border-{direction}--color-transparent`.
// 
// Markup:
// <div class="card border--color-navy">
//   <h4 class="pb-2 mb-2">Card Header</h4>
//   <div class="card__content block-container blocks px-3">
//     <div class="block block-6 border-r border-r--color-med-blue">
//       <p>Here is some generic content for testing purposes. Don't worry about the actualy content of this card.</p>
//     </div>
//     <div class="block block-6">
//       <p>The idea is to show how cool we can get with making borders.</p>
//     </div>
//   </div>
// </div>
// 
// Styleguide Utilities.Borders.Colors

.no-border {
  border: none !important;
}

%border,
.border {
  border: 1px solid;

  &-x {
    border-left: 1px solid;
    border-right: 1px solid;
    @for $i from 1 through 5 {
      &.border--width-#{$i} {
        border-width: 0 #{$i}px !important;
      }
    }
  }

  &-y {
    border-top: 1px solid;
    border-bottom: 1px solid;
    @for $i from 1 through 5 {
      &.border--width-#{$i} {
        border-width: #{$i}px 0 !important;
      }
    }
  }

  // Specific Border sides
  @each $direction, $d in variables.$xy-border {

    // Direction
    &-#{$d} {
      border-#{$direction}: 1px solid!important;

      @for $i from 1 through 5 {
        &.border--width-#{$i} {
          border-#{$direction}-width: #{$i}px !important;
        }
      }
    }
  }


  @for $i from 1 through 5 {
    &--width-#{$i} {
      border-width: #{$i}px !important;
    }
  }
}

// Border Colors
@each $name, $color in colors.$all-colors {
  .border--color-#{$name} {
    border-color: $color !important;
  }
}

.border--color-transparent {
  border-color: transparent !important;
}

// Specific side colors
@each $direction, $d in variables.$xy-border {

  @each $name, $color in colors.$all-colors {
    .border-#{$d}--color-#{$name} {
      border-#{$direction}-color: $color !important;
    }
  }

  .border-#{$d}--color-transparent {
    border-#{$direction}-color: transparent !important;
  }
}