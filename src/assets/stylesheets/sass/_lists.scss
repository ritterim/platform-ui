@use "config";
@use "mixins";
@use "variables";
@use "sass:map";

// Lists
//
// The `ul` within platform-ui have `margin: 0` and a `padding-left: 1rem`. The `li`s in those lists have `margin-bottom: .5rem`.
//
// Markup:
// <ul>
//   <li>Dogs</li>
//   <li>Cats</li>
//   <li>Birds</li>
// </ul>
// <div class="my-3"></div>
// <ol>
//   <li>First</li>
//   <li>Second</li>
//   <li>Third</li>
// </ol>
// 
//  Styleguide Components.Lists

// List
//
// Our list is simplified and strips the `list-style-type`, `margin`, and `padding` from the user agent stylesheet.
//
// Markup:
// <ul class="list">
//   <li>This is a list item.</li>
//   <li>This is a list item.</li>
//   <li>This is a list item.</li>
// </ul>
//
// Styleguide Components.Lists.RimList


// List - Inline
// 
// You can create an inline list by adding the `list--inline` modifier to `list`. This adds `display: flex` to the list rather than 
// adding `display: inline` to each `li` inside the list. 
// 
// Markup:
// <ul class="list list--inline">
//   <li>Inline list item.</li>
//   <li>Inline list item.</li>
//   <li>Inline list item.</li>
// </ul>
// 
// Weight: 3
// 
// Styleguide Components.Lists.ListInline


// List - Bordered
// 
// You can have a bordered list by adding the `list--bordered` modifier. Be sure to add the class `list__item` to the li.
// This adds a border-bottom to each `li` except the last. A `padding-bottom: .5rem` is added to each `li` to match the 
// `margin-bottom` in order to create a cleaner separation from the bottom border.
// 
// Markup:
// <ul class="list list--bordered">
//   <li class="list__item">This is a list item.</li>
//   <li class="list__item">This is a list item.</li>
//   <li class="list__item">This is a list item.</li>
// </ul>
// 
// Weight: 4
// 
// Styleguide Components.Lists.ListBordered


// List - Breadcrumbs
// 
// You can use our list classes as well as some other utilities to build yourself a simple breadcrumb trail.
// In the example below we're using `list list--inline` to change the direction of the flow for the list items.
// This removes any user agent styles for margin and padding as well as the list style type. Adding `list--inline`
// also gives a `margin-right` to each `li` in the list. This can be changed with our [spacing utilities](/section-utilities.html#utilities-spacers).
// From there, we added an angle right icon to show direction of the breadcrumbs. You can switch this out for any icon you'd like.
// 
// Adding `aria-label="breadcrumbs"` to a `nav` wrapping the list as well as adding `aria-current="page"` to 
// the current page will help with accessibility. In an example like breadcrumbs, we thhink it is important to use a list element
// and to wrap it in a `nav`. The nav will help direct screen readers. As far as the list, since there is an order to the breadcrumbs
// you can use an `ol` but using a `ul` is just fine too.
// 
// Markup:
// <nav aria-label="breadcrumbs">
//   <ol class="list list--inline">
//     <li class="flex flex--align-center">
//       <a href="#">Home</a> <i class="pi-angle-right ml-2"></i>
//     </li>
//     <li class="flex flex--align-center">
//       <a href="#">Blog</a> <i class="pi-angle-right ml-2"></i>
//     </li>
//     <li class="flex flex--align-center">
//       <a href="#">Blog Category</a> <i class="pi-angle-right ml-2"></i>
//     </li>
//     <li class="flex flex--align-center">
//       <span aria-current="page">Blog Post</span>
//     </li>
//   </ol>
// </nav>
// <div class="my-3"></div
// <nav aria-label="breadcrumbs">
//   <ol class="list list--inline">
//     <li class="flex flex--align-center">
//       <a href="#">Home</a> <span class="ml-2">/</span>
//     </li>
//     <li class="flex flex--align-center">
//       <a href="#">Blog</a> <span class="ml-2">/</span>
//     </li>
//     <li class="flex flex--align-center">
//       <a href="#">Blog Category</a> <span class="ml-2">/</span>
//     </li>
//     <li class="flex flex--align-center">
//       <span aria-current="page">Blog Post</span>
//     </li>
//   </ol>
// </nav>
// 
// Weight: 5
// 
// Styleguide Components.Lists.Breadcrumbs


// List - Other Examples
// 
// Using our utilities, icons, and modifiers, you can create some pretty fancy lists. We think so anyway.
// Substitute a font-icon for `list-style-type`.
// 
// Markup:
// <p>Old Post List Example</p>
// <p>Checkout Our Blogs<p>
// <ul class="list">
//   <li class="flex">
//     <i class="pi-arrow-solid-right text-salmon mr-3"></i> <p class="border-b border--color-lighter pb-2 mb-0 flex--grow">How To</p>
//   </li>
//   <li class="flex">
//     <i class="pi-arrow-solid-right text-salmon mr-3"></i> <p class="border-b border--color-lighter pb-2 mb-0 flex--grow">People to meet</p>
//   </li>
//   <li class="flex">
//     <i class="pi-arrow-solid-right text-salmon mr-3"></i> <p class="border-b border--color-lighter pb-2 mb-0 flex--grow">Places to go</p>
//   </li>
//   <li class="flex">
//     <i class="pi-arrow-solid-right text-salmon mr-3"></i> <p class="mb-0 flex--grow">Things to do</p>
//   </li>
// </ul>
// 
// Weight: 6
// 
// Styleguide Components.Lists.Other

// Post Lists
// 
// <i class="pi-warning text-orange"></i> **NOTE**: This list style is deprecated as of <strong class="text-navy">v1.1.15</strong>. To see how to recreate this look using utility classes, see our [example](/section-components.html#components-lists-other) above. 
//
// A `post-list` is a pretty basic list. The margin and padding is removed from the list itself. The `post-item`s which should be added to the `li`s
// in the list, have a `padding-bottom: 1rem` and `margin-bottom: 1rem`.
//
// Adding the class `post-list--inline` gives the list an inline look using `display: flex`.
//
// You can add some arrow icons to be in front of each `li` by adding the class `post-list--arrow`.
//
// Weight: 2
// 
// Styleguide Components.Lists.Post


ul {
  margin: 0;
  padding: 0 0 0 variables.$spacer;

  li {
    margin: 0 0 map.get(variables.$spacers, 2);
  }
}

ol {
  list-style-position: inside;
}

.post {

  &-list {
    list-style: none;
    flex-grow: 1;
    margin: 0;
    padding: 0;

    @include mixins.breakpoint(desktop, max) {
      margin: 0;
    }

    &--inline {
      display: flex;
      flex-wrap: wrap;
    }

    &--arrow {
      margin: 0 variables.$spacer;
      padding: 0 0 0 map.get(variables.$spacers, 4);

      .post-item {

        &:before {
          color: map.get(config.$brand-colors, 'salmon');
          content: '\f114';
          display: inline-block;
          font-family: platform-icons;
          font-weight: 900;
          left: -(map.get(variables.$spacers, 4));
          position: absolute;
          transform: rotate(-145deg);
        }
      }
    }
  }

  &-item {
    margin: 0 0 variables.$spacer;
    padding: 0 0 variables.$spacer;
    position: relative;

    &:not(:last-of-type) {
      border-bottom: 1px solid map.get(variables.$greyscale, 'lighter');
    }

    &__duration {
      color: map.get(variables.$greyscale, 'light');
      font-size: map.get(variables.$font-scale, 'sm');
      margin-bottom: map.get(variables.$spacers, 1);

      &:before {
        content: '\f14a';
        font-family: platform-icons;
        margin: 0 map.get(variables.$spacers, 2) 0 0;
      }
    }

    &__title {
      margin-bottom: map.get(variables.$spacers, 1);
    }

    &__link {
      font-size: map.get(variables.$font-scale, 'sm');
      font-weight: bold;
    }
  }
}

.image-link-list {
  padding: 0;
  list-style: none;

  li {
    width: 100%;

    .image-link {
      background-color: map.get(config.$brand-colors, 'med-blue');
      display: block;
      position: relative;

      img {
        height: auto;
        width: 100%;
        max-width: 100%;
        opacity: .5;
      }

      &--video {
        position: relative;

        &:before {
          background: rgba(0, 0, 0, .3);
          content: '';
          height: 100%;
          position: absolute;
          width: 100%;
          z-index: 1;
        }

        &:after {
          content: '\f16e';
          color: map.get(variables.$greyscale, 'white');
          font-family: platform-icons;
          font-size: map.get(variables.$font-scale, 'lg') * 2;
          font-weight: 900;
          left: 50%;
          position: absolute;
          top: 50%;
          text-shadow: 0 0 .5rem map.get(variables.$greyscale, 'black');
          transform: translate(-50%, -50%);
          transition: config.$transitions;
          z-index: 2;
        }
        &:hover {
          &:after {
            transform: translate(-50%, -50%) scale(1.2);
            text-shadow: 0 0 1rem map.get(variables.$greyscale, 'black');
          }
        }
      }

      &-caption {
          bottom: 0;
          padding: map.get(variables.$spacers, 2);
          position: absolute;
          text-align: center;
          width: 100%;
          z-index: 5;
          @extend %flex-center;
      }
      &__clear {
        background-color: transparent;
        img {
          opacity: 1;
        }
      }
    }
  }
}


@mixin list {
  $list: &;

  list-style-type: none;
  margin: 0;
  padding: 0;

  &--bordered {

    #{$list}__item {
      padding-bottom: map.get(variables.$spacers, 2);

      &:not(:last-of-type) {
        border-bottom: 1px solid map.get(variables.$greyscale, 'light-mid');
      }
    }
  }

  &.list--inline {
    display: flex;

    li {
      margin: 0 map.get(variables.$spacers, 2) 0 0;
    }
  }
}

.pui-list {
  @include list;
}

.list {
  @include list;
}