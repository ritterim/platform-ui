
@use "config";
@use "mixins";
@use "variables";
@use "sass:color";
@use "sass:math";
@use "sass:map";

// Accordion
//
// Leverage spacing utility classes for padding and margin for the content within the accordion.
// To show the content of the accordion toggle the class `active` on `accordion`. These accordions are also keyboard accessible.
//
// Platform UI accordions were designed to be stacked.
//
// Markup:
// <div class="accordion">
//    <a href="#" class="accordion__header px-3 py-3 flex--justify-between flex--align-center">
//      <div class="flex flex--align-center">
//        <p>This is an accordion header. </p>
//      </div>
//      <i class="pi-angle-down accordion__icon text-med-blue"></i>
//    </a>
//    <div class="accordion__content px-3 py-3">
//      <p>This is the accordion content.</p>
//    </div>
//  </div>
// <div class="accordion">
//    <a href="#" class="accordion__header px-3 py-3 flex--justify-between flex--align-center">
//      <div class="flex flex--align-center">
//        <p>This is an accordion header. </p>
//      </div>
//      <i class="pi-angle-down accordion__icon text-med-blue"></i>
//    </a>
//    <div class="accordion__content px-3 py-3">
//      <p>This is the accordion content.</p>
//    </div>
//  </div>
//
// Styleguide Components.Accordion

// Active
//
// Adding `.active` changes the default header bar background and hover highlight.
//
// Markup:
// <div class="accordion active">
//    <a href="#" class="accordion__header px-3 py-3 flex--justify-between flex--align-center">
//      <div class="flex flex--align-center">
//        <p>This is an accordion header.</p>
//      </div>
//      <i class="pi-angle-down accordion__icon text-med-blue"></i>
//    </a>
//    <div class="accordion__content px-3 py-3">
//      <p>This is the accordion content.</p>
//    </div>
//  </div>
//
// Styleguide Components.Accordion.Active

// Nested
//
// Nesting accordions gives the appearance of active accordions within.
//
// Markup:
// <div class="accordion active">
//    <a href="#" class="accordion__header px-3 py-3 flex--justify-between flex--align-center">
//      <div class="flex flex--align-center">
//        <p>This is an accordion header.</p>
//      </div>
//      <i class="pi-angle-down accordion__icon text-med-blue"></i>
//    </a>
//   <div class="accordion__content">
//     <div class="px-3 py-3">
//       <p>This is the accordion content.</p>
//     </div>
//     <div class="accordion">
//       <a href="#" class="accordion__header px-3 py-3 flex flex--justify-between flex--align-center">
//         <div class="flex flex--align-center">
//           <p>This is a nested accordion header.</p>
//         </div>
//         <i class="pi-angle-down accordion__icon text-med-blue"></i>
//       </a>
//       <div class="accordion__content">
//         <div class="px-3 py-3">
//           <p>This is the nested accordion content.</p>
//         </div>
//       </div>
//     </div>
//   </div>
// </div>
//
// Styleguide Components.Accordion.Nested


.pui-accordion,
.accordion {

  $accordion-primary-color: map.get(variables.$greyscale, 'base');
  $accordion-primary-background: map.get(variables.$greyscale, 'white');
  $accordion-secondary-background: map.get(variables.$greyscale, 'lighter');
  $accordion-primary-border-color: color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold * 2));
  $accordion-secondary-border-color: color.adjust(map.get(config.$brand-colors, 'med-blue'), $lightness: math.percentage(config.$hue-threshold));
  $accordion-active-background: map.get(config.$brand-colors, 'med-blue' );
  $accordion-hover-border: map.get(config.$brand-colors, 'skyblue' );

  background-color: $accordion-primary-background;
  border: 1px solid transparent;
  border-top-color: $accordion-primary-border-color;
  color: $accordion-primary-color;
  font-family: map.get(config.$fonts, 'base');
  font-size: 100%;
  transition: config.$transitions;

  &:last-of-type {
    border-bottom-color: $accordion-primary-border-color;
  }

  &:not(.active):hover {
    border-color: $accordion-hover-border;

    .pui-accordion__header,
    .accordion__header {
      background-color: $accordion-secondary-background;
    }
  }



  &.active {
    border-color: transparent;
    box-shadow: 0px 0px 0px 2px $accordion-hover-border;

    > .pui-accordion__header,
    > .accordion__header {
      background-color: $accordion-secondary-background;

      .pui-accordion__icon,
      .accordion__icon {
        @extend %rotate-180;
      }
    }
  }

  &__header {
    display: flex;
    position: relative;
    transition: config.$transitions;
    z-index: 10;
  }

  &__icon {
    transition: config.$transitions;
  }

  &__content {

    > .pui-accordion,
    > .accordion {
      border: none;
      &:not(.active):hover {
        .pui-accordion__header,
        .accordion__header {
          background-color: $accordion-primary-background;
        }
      }
      &.active {
        border: none;
        box-shadow: none;
      }
      > .pui-accordion,
      > .accordion {
         &__header {
          background-color: $accordion-primary-background;
          font-weight: bold;
         }
       }
    }
    border-top: none;
    display: none;
    position: relative;
    z-index: 0;

    &.active {
      display: block;
    }
  }

}
