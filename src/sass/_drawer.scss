@use "config";
@use "mixins" as mixins;
@use "variables" as variables;
@use "sass:math";
@use "sass:map";

.drawer {
  --_drawer-background: var(
    --drawer-background, 
    var(--white)
  );
  --_drawer-padding: var(
    --drawer-padding, 
    var(-space-4)
  );

  background-color: var(--_drawer-background);
  box-shadow: 0 -1rem 2rem var(--black-a40);
  flex-direction: column;
  width: 100%;
  position: fixed;
  z-index: 500;
  bottom: 0;
  left: 0;
  transform: translate(0, 100%);
  visibility: hidden;

  @media (prefers-reduced-motion: no-preference) {
    transition-property: transform, visibility;
    transition-timing-function: ease-in-out;
    transition-duration: var(--transitions);
  }

  &__inner {
    height: 100%;
    min-height: 50vh;
    overflow-y: visible;
    overflow-x: hidden;

    .drawer-bottom & {
      max-height: 80vh;
    }
  }

  &--single-row {
    & {
      .drawer__inner {
        min-height: 8rem !important;
      }
    }
  }

  &__header {
    padding: var(--_drawer-padding);
    position: relative;
    width: 100%;

    @include mixins.breakpoint(tablet, max) {
      padding-top: var(--size-5);
    }

    .drawer__close {
      position: absolute;
      right: calc(var(--size-3) * (-1));
      top: 50%;
      transform: translate(-50%, -50%);

      @include mixins.breakpoint(tablet, max) {
        top: 1.5rem;
      }
    }
  }
  
  &__content {
    overflow-y: auto;
    padding: var(--_drawer-padding);
    position: relative;
  }

  &__open {
    cursor: pointer;

    @include mixins.breakpoint(tablet, max) {
      bottom: 3.5rem;
    }
  }

  // Drawer animates from the side
  &-right,
  &-left {
    --_drawer-side-width: var(--drawer-side-width, 27rem);

    bottom: 0;
    box-shadow: 0 -0.5rem 2rem var(--black-a50);
    flex-direction: column;
    height: 100%;
    position: fixed;
    // z-index lower than the fixed header
    z-index: 99;

    .header-fixed & {
      height: calc(100% - var(--menu-height));
    }

    @include mixins.breakpoint(tablet, min) {
      width: var(--_drawer-side-width);
    }

    &[hidden] {
      display: none;
    }
  }

  &-right {
    left: auto;
    right: 0;
    transform: translate(100%, 0);
  }

  &-left {
    right: auto;
    left: 0;
    transform: translate(-100%, 0);
  }

  // Drawer Opens from the top
  &-top {
    bottom: unset;
    box-shadow: 0 1rem 2rem var(--black-a40);
    top: 0;
    transform: translate(0, -100%);

    // if header is fixed, account for header height.
    .header-fixed & {
      top: var(--menu-height);
      transform: translateY(calc((-1 * var(--menu-height)) + -100%));
    }
  }

  &.active {
    transform: translate(0%);
    visibility: visible;
  }
}

// side content stuff

.side-content {
  height: calc(100% - 4rem);
}
