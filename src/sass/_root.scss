@use "config";
@use "variables" as variables;
@use "sass:map";
@use "sass:meta";

$all-colors: () !default;
$site-colors: () !default;

@if meta.type-of(config.$config-colors) == "map" {
  $all-colors: map.merge(config.$config-colors, variables.$greyscale);
} @else {
  $all-colors: map.merge(variables.$greyscale, $all-colors);
  @warn "$config-colors is not set or empty";
}

:root {
  @include variables.color-tokens();

  @if meta.type-of($all-colors) == "map" {
    @each $name, $color in $all-colors {
      // --#{$name}: #{$color};

      $hue: hue($color);
      $sat: saturation($color);
      $light: lightness($color);

      --#{$name}-hue: #{$hue};
      --#{$name}-sat: #{$sat};
      --#{$name}-light: #{$light};

      --#{$name}: hsl(var(--#{$name}-hue), var(--#{$name}-sat), var(--#{$name}-light));

      @for $i from 1 through 9 {
        $hue: hue($color);
        $sat: saturation($color);
        $light: lightness($color);
        --#{$name}-a#{$i}0: hsla(#{$hue}, #{$sat}, #{$light}, #{$i * 0.1});
      }

      // @for $i from 1 through 9 {
      //   $hue: hue($color);
      //   $sat: saturation($color);
      //   $light: lightness($color);
      //   --#{$name}-l#{$i}0: hsl(#{$hue}, #{$sat}, #{$i * 10%});
      // }
    }
  }

  @if meta.type-of($site-colors) == "map" {
    @each $name, $color in $site-colors {
      $hue: hue($color);
      $sat: saturation($color);
      $light: lightness($color);

      --#{$name}-hue: #{$hue};
      --#{$name}-sat: #{$sat};
      --#{$name}-light: #{$light};

      --#{$name}: hsl(var(--#{$name}-hue), var(--#{$name}-sat), var(--#{$name}-light));

      @for $i from 1 through 9 {
        $hue: hue($color);
        $sat: saturation($color);
        $light: lightness($color);
        --#{$name}-a#{$i}0: hsla(#{$hue}, #{$sat}, #{$light}, #{$i * 0.1});
      }
    }
  }
  @each $type, $size in variables.$radius {
    --#{$type}: #{$size};
  }
  --menu-height: #{config.$menu-height};
  --transitions: #{config.$transitions};
  --max-container: 1440px;
}
