@use "config";
@use "mixins" as mixins;
@use "variables" as variables;
@use "sass:color";
@use "sass:map";
@use "sass:math";

.table {
  --table-color-light: var(--light-3);

  $table-border: 1px solid var(--table-color-light);
  $responsive-table-bottom-gap: var(--space-2);
  $responsive-table-label-bg: var(--lighter);
  width: 100%;
  background-color: transparent;
  border-collapse: separate;
  border-spacing: 0;
  @include mixins.breakpoint(tablet, max) {
    border: none;
  }

  thead {
    background-color: var(--lighter);
    border-bottom: 1px solid var(--light);
    color: var(--base);
    font-weight: bold;
    text-align: left;
    @include mixins.breakpoint(tablet, max) {
      border: none;
    }

    th {
      border: solid var(--table-color-light);
      border-width: 1px 0;
    }
  }

  tr {
    background-color: transparent;
    transition: background-color var(--transitions) ease;
    @include mixins.breakpoint(tablet, min) {
      &:hover {
        background-color: var(--lighter);
      }
    }

    td,
    th {
      padding: 1rem;
    }

    td {
      border-bottom: 1px solid var(--table-color-light);
    }

    &:last-child {
      td {
        border-color: transparent;
      }
    }
  }
  @include mixins.breakpoint(tablet, max) {
    &:not(.unresponsive) {
      thead tr {
        position: absolute;
        top: -9999em;
        left: -9999em;
      }

      tr {
        border-bottom: none;
        display: block;

        td {
          align-items: flex-start;
          border: none;
          display: flex;
          flex-direction: column;

          &:before {
            content: attr(data-label);
            display: inline-block;
            font-weight: bold;
            line-height: 1.5;
            min-width: 40%;
            padding-right: var(--space-2);
            text-align: left;
          }
        }
      }

      tr + tr {
        border-top: 1px solid var(--table-color-light);
        margin-top: $responsive-table-bottom-gap;
        padding-top: $responsive-table-bottom-gap;
      }
      /* Get table cells to act like rows */
    }
  }
  &--no-hover {
    tr {
      @include mixins.breakpoint(tablet, min) {
        &:hover {
          background-color: initial;
        }
      }
    }
  }
  &--bordered {
    // coming
  }
  &--condensed {
    // coming
  }
}
